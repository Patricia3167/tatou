# ------------------------------------------------------------------------
# Tatou API fuzzing configuration
# ------------------------------------------------------------------------

fuzzer:
  tool: "Hypothesis (Python)"
  version: "6.67.0"
  description: "Property-based fuzzer using strategies to cover edge cases for GET endpoints."

target:
  base_url: "http://server:5000/api"
  endpoints:
    - "/get-document"
    - "/get-document/<id>"
    - "/get-version/<link>"

auth:
  headers:
    Authorization: "Bearer VALID_TEST_TOKEN"   # test account only

strategies:
  upload_document:
    filename:
      type: text
      min_size: 1
      max_size: 64
      sampled_tokens:
        - "doc.pdf"
        - "payload.pdf"
        - "rmap.PdF"
        - "evil.pdf.exe"
    content:
      type: binary
      min_size: 0
      max_size: 256
    mime:
      type: sampled_from
      values: ["application/pdf", "application/zip", "text/plain", "image/png"]
    form_name:
      type: text
      min_size: 0
      max_size: 64
    extension:
      type: sampled_from
      values: [".pdf", ".zip", ".pdf.exe", ".PdF", ".pdf%00.zip"]
    magic_prefix:
      type: sampled_from
      values: ["%PDF", "PK\\x03\\x04", "\\x89PNG", ""]   # YAML strings, mapped later to bytes
    traversal:
      type: sampled_from
      values: [true, false]
  login_strategy:
    email:
      type: text
      min_size: 0
      max_size: 128
      sampled_tokens:
        - ""
        - "user@example.com"
        - "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    password:
      type: text
      min_size: 0
      max_size: 128
      sampled_tokens:
        - ""
        - "P@ssw0rd!"
        - "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
  document_id_strategy:
    sampled_tokens: [-1, 0, 1, 999999]
    components:
      - type: integer
  create_user:
    email:
      type: text
      min_size: 0
      max_size: 128
    login:
      type: text
      min_size: 0
      max_size: 64
    password:
      type: text
      min_size: 0
      max_size: 128
  link_strategy:
    description: "Endpoint path/query fuzzing strategy for /get-version/<link>"
    sampled_tokens:
      - "../etc/passwd"
      - "../../secret.txt"
      - "%2e%2e%2fetc%2fpasswd"
      - "..\\..\\evil.pdf"
      - ""
      - " "
      - ":"
      - "%00"
      - "%3A"
      - "test..pdf"
      - "validlink123"
      - "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      - "日本語.pdf"

    components:
      - type: "text"
        min_size: 0
        max_size: 200
      - type: "binary"
        min_size: 0
        max_size: 64
        encoding: "hex/base64"
      - type: "integer"
        representation: "string"
      - type: "percent_encoded_text"
        source: "text"
      - type: "sampled_from"
        values: ["../etc/passwd", "%00", ":", "", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"]

parameters:
  hypothesis:
    max_examples: 200
    deadline: null  # disables per-example timeout
    derandomize: false
  requests:
    timeout_seconds: 6

rate_and_parallelism:
  max_rps_per_worker: 5
  workers: 1

environment:
  run_in: "docker compose exec server"
  description: "Local Docker environment; test DB snapshot applied before each run."

safety:
  allowed_operations:
    - GET
    - POST
  forbidden_operations:
    - PUT
    - DELETE
  run_against: "staging/local docker only"
  notes: "Do not run against production; test token has minimal privileges."

logging:
  artifact_dir: "fuzz-results/"
  save_response_bodies: true
  save_minimal_examples: true
  format: "JSON per failing case"

reproducibility:
  command: "docker compose exec server pytest test/fuzzing -q"
  notes: "Use Hypothesis shrinking and -s option to capture failing inputs."
